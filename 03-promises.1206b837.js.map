{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,WAepC,SAASE,EAAcC,EAAQC,EAASC,GACfN,SAASO,cAAc,OAC9CC,uBAAyB,uBAAkCC,OAAXL,EAAO,MAAYK,OAARJ,EAAQ,UACnEP,EAAKC,KAAKW,mBAAmB,YAAaF,wBAC1C,IAAMG,EAAaX,SAASC,cAAc,sBAA6BQ,OAAPL,EAAO,MAEvEO,EAAWC,MAAMC,gBAAkBP,EACnCK,EAAWC,MAAMN,MAAQ,QACzBK,EAAWC,MAAME,MAAQ,QACzBH,EAAWC,MAAMG,OAAS,OAC1BJ,EAAWC,MAAMI,aAAe,MAChCL,EAAWC,MAAMK,UAAY,OAC7BN,EAAWC,MAAMM,UAAY,Q,CAoC/BpB,EAAKC,KAAKoB,iBAAiB,UA/BN,SAAAC,G,mBA7BrB,SAAuBC,EAAUC,GAC/B,OAAQC,WAAa,IAAIC,SAAQ,SAACC,EAASC,GACzCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwChB,OAAfY,EAAS,QAAYZ,OAANa,EAAM,OAEpDI,EAAK,sBAAqCjB,OAAfY,EAAS,QAAYZ,OAANa,EAAM,M,GAEnDA,E,KAyCHQ,CAAcC,EANJ,IAANA,EACeC,EAEAA,GAAcD,EAAI,GAAKE,GAIvCC,MAAK,SAAAC,GACJhC,EAAc4B,EAAGI,EAAO,Q,IAEzBC,OAAM,SAAAC,GACLlC,EAAc4B,EAAGM,EAAO,M,KAzB9BjB,EAAMkB,iBAaN,IAXA,IAEuBC,EAAnBnB,EAAMoB,cADRC,SAAYnB,EAAKiB,EAALjB,MAAOoB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAmBC,OAAOF,EAAOR,OACjCH,EAAaa,OAAOvB,EAAMa,OAC1BF,EAAmBY,OAAOH,EAAKP,OAK5BW,EAAI,EAAGA,GAAKF,EAAkBE,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return (newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  }));\n}\nfunction markupMessage(number, message, color) {\n  const promiseMessage = document.createElement('div');\n  markupOfPromiseMessage = `<div data-position=\"${number}\">${message}</div>`;\n  refs.form.insertAdjacentHTML('beforeend', markupOfPromiseMessage);\n  const messageBox = document.querySelector(`div[data-position=\"${number}\"`);\n\n  messageBox.style.backgroundColor = color;\n  messageBox.style.color = 'white';\n  messageBox.style.width = '270px';\n  messageBox.style.height = '25px';\n  messageBox.style.borderRadius = '5px';\n  messageBox.style.marginTop = '10px';\n  messageBox.style.textAlign = 'center';\n}\n\n// Function to handle submit event\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const numberOfPromises = Number(amount.value);\n  const firstDelay = Number(delay.value);\n  const stepOfNextDelays = Number(step.value);\n\n  let delayOfPromise = 0;\n  let markupOfPromiseMessage = '';\n\n  for (let i = 1; i <= numberOfPromises; i += 1) {\n    if (i === 1) {\n      delayOfPromise = firstDelay;\n    } else {\n      delayOfPromise = firstDelay + (i - 1) * stepOfNextDelays;\n    }\n\n    createPromise(i, delayOfPromise)\n      .then(value => {\n        markupMessage(i, value, 'green');\n      })\n      .catch(error => {\n        markupMessage(i, error, 'red');\n      });\n  }\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitBtn","$ce04d3a99e08e73b$var$markupMessage","number","message","color","createElement","markupOfPromiseMessage","concat","insertAdjacentHTML","messageBox","style","backgroundColor","width","height","borderRadius","marginTop","textAlign","addEventListener","event","position","delay","newPromise","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$createPromise","i","firstDelay","stepOfNextDelays","then","value","catch","error","preventDefault","_elements","currentTarget","elements","step","amount","numberOfPromises","Number","i1","_loop"],"version":3,"file":"03-promises.1206b837.js.map"}