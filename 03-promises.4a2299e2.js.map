{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,WAGpC,SAASE,EAAcC,EAAUC,GAC/B,OAAQC,WAAa,IAAIC,SAAQ,CAACC,EAASC,KACzCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBJ,QAAiBC,OAE5CI,EAAK,sBAAoBL,QAAeC,MAAU,GAErDA,EAAM,G,CAGb,SAASQ,EAAcC,EAAQC,EAASC,GACfhB,SAASiB,cAAc,OAC9CC,uBAAyB,uBAAuBJ,MAAWC,UAC3DjB,EAAKC,KAAKoB,mBAAmB,YAAaD,wBAC1C,MAAME,EAAapB,SAASC,cAAc,sBAAsBa,MAEhEM,EAAWC,MAAMC,gBAAkBN,EACnCI,EAAWC,MAAML,MAAQ,QACzBI,EAAWC,MAAME,MAAQ,QACzBH,EAAWC,MAAMG,OAAS,OAC1BJ,EAAWC,MAAMI,aAAe,MAChCL,EAAWC,MAAMK,UAAY,OAC7BN,EAAWC,MAAMM,UAAY,Q,CAoC/B7B,EAAKC,KAAK6B,iBAAiB,UA/BNC,IACnBA,EAAMC,iBAEN,MACEC,UAAU1B,MAAEA,EAAK2B,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEJC,EAAmBC,OAAOH,EAAOI,OACjCC,EAAaF,OAAO/B,EAAMgC,OAC1BE,EAAmBH,OAAOJ,EAAKK,OAErC,IAAIG,EAAiB,EAGrB,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAkBM,GAAK,EAExCD,EADQ,IAANC,EACeH,EAEAA,GAAcG,EAAI,GAAKF,EAG1CpC,EAAcsC,EAAGD,GACdE,MAAKL,IACJxB,EAAc4B,EAAGJ,EAAO,QAAQ,IAEjCM,OAAMC,IACL/B,EAAc4B,EAAGG,EAAO,MAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return (newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  }));\n}\nfunction markupMessage(number, message, color) {\n  const promiseMessage = document.createElement('div');\n  markupOfPromiseMessage = `<div data-position=\"${number}\">${message}</div>`;\n  refs.form.insertAdjacentHTML('beforeend', markupOfPromiseMessage);\n  const messageBox = document.querySelector(`div[data-position=\"${number}\"`);\n\n  messageBox.style.backgroundColor = color;\n  messageBox.style.color = 'white';\n  messageBox.style.width = '270px';\n  messageBox.style.height = '25px';\n  messageBox.style.borderRadius = '5px';\n  messageBox.style.marginTop = '10px';\n  messageBox.style.textAlign = 'center';\n}\n\n// Function to handle submit event\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const numberOfPromises = Number(amount.value);\n  const firstDelay = Number(delay.value);\n  const stepOfNextDelays = Number(step.value);\n\n  let delayOfPromise = 0;\n  let markupOfPromiseMessage = '';\n\n  for (let i = 1; i <= numberOfPromises; i += 1) {\n    if (i === 1) {\n      delayOfPromise = firstDelay;\n    } else {\n      delayOfPromise = firstDelay + (i - 1) * stepOfNextDelays;\n    }\n\n    createPromise(i, delayOfPromise)\n      .then(value => {\n        markupMessage(i, value, 'green');\n      })\n      .catch(error => {\n        markupMessage(i, error, 'red');\n      });\n  }\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","newPromise","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$markupMessage","number","message","color","createElement","markupOfPromiseMessage","insertAdjacentHTML","messageBox","style","backgroundColor","width","height","borderRadius","marginTop","textAlign","addEventListener","event","preventDefault","elements","step","amount","currentTarget","numberOfPromises","Number","value","firstDelay","stepOfNextDelays","delayOfPromise","i","then","catch","error"],"version":3,"file":"03-promises.4a2299e2.js.map"}