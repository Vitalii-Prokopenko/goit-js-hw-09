{"mappings":"YAKA,SAASA,EAAcC,EAAUC,GAC/B,OAAQC,WAAa,IAAIC,SAAQ,SAACC,EAASC,GACnBC,KAAKC,SAAW,GAEpCH,EAAQ,uBAAwCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDI,EAAK,sBAAqCG,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,KAX3C,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,YAmD/BF,KAAKI,iBAAiB,UAnCN,SAAAC,GACnBA,EAAMC,iBAEN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYjB,EAAKe,EAALf,MAAOkB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3BC,QAAQC,IAAIrB,EAAMsB,OAClBF,QAAQC,IAAIH,EAAKI,OACjBF,QAAQC,IAAIF,EAAOG,OAQnB,IANA,IAIIC,EAJEC,EAAmBC,OAAON,EAAOG,OACjCI,EAAaD,OAAOzB,EAAMsB,OAC1BK,EAAmBF,OAAOP,EAAKI,OAI5BM,EAAI,EAAGA,GAAKJ,EAAkBI,GAAK,EAExCL,EADQ,IAANK,EACeF,EAEAA,GAAcE,EAAI,GAAKD,EAE1CP,QAAQC,IAAI,GAAYd,OAATqB,EAAE,SAAsBrB,OAAfgB,IAExBzB,EAAc8B,EAAGL,GACdM,MAAK,SAAAP,GACJF,QAAQC,IAAIC,E,IAEbQ,OAAM,SAAAC,GACLX,QAAQC,IAAIU,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return (newPromise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }));\n}\n\n// Function to handle submit event\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  console.log(delay.value);\n  console.log(step.value);\n  console.log(amount.value);\n\n  const numberOfPromises = Number(amount.value);\n  const firstDelay = Number(delay.value);\n  const stepOfNextDelays = Number(step.value);\n\n  let delayOfPromise;\n\n  for (let i = 1; i <= numberOfPromises; i += 1) {\n    if (i === 1) {\n      delayOfPromise = firstDelay;\n    } else {\n      delayOfPromise = firstDelay + (i - 1) * stepOfNextDelays;\n    }\n    console.log(`${i} and ${delayOfPromise}`);\n\n    createPromise(i, delayOfPromise)\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","newPromise","Promise","resolve","reject","Math","random","concat","form","document","querySelector","submitBtn","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","console","log","value","delayOfPromise","numberOfPromises","Number","firstDelay","stepOfNextDelays","i","then","catch","error"],"version":3,"file":"03-promises.b68b9842.js.map"}